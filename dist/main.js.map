{"version":3,"file":"main.js","mappings":"mBAAA,MCEMA,EAAcC,SAASC,cAAc,oBACrCC,EAAeF,SAASC,cAAc,qBACtCE,EAAcH,SAASC,cAAc,gBACrCG,EAAmBJ,SAASC,cAAc,yBAC1CI,EAAkBL,SAASC,cAAc,mBACzCK,EAAiBN,SAASC,cAAc,mBACxCM,EAAWP,SAASQ,cAAc,OAClCC,EAAUT,SAASC,cAAc,SACjCS,EAAYV,SAASC,cAAc,cACzC,IAAIU,EAAqB,KACzBJ,EAASK,UAAUC,IAAI,SACvBN,EAASK,UAAUC,IAAI,aACvBb,SAASC,cAAc,SAASa,YAAYP,GAE5C,MAAMQ,EAAcA,KAClBhB,EAAYa,UAAUC,IAAI,aAC1BX,EAAaU,UAAUC,IAAI,YAAY,EAgBnCG,EAAiBA,KACrB,MAAMC,EAAajB,SAASC,cAAc,8BAA8BiB,GAEtEZ,EAAea,YADE,YAAfF,EAC4B,GAAEN,EAAmBS,UAErB,GAAET,EAAmBU,SACrD,EAQIC,EAAYA,KAChBf,EAASK,UAAUC,IAAI,YAAY,ECnC/BU,EAAYvB,SAASC,cAAc,kBACnCuB,EAAcxB,SAASC,cAAc,oBAErCwB,EAAeC,UACnB,MAAMC,EAAWH,EAAYI,MAC7B,GAAwB,KAApBD,EAASE,OAAe,OAE5Bd,IACAO,IDuCAb,EAAQqB,MAAMC,gBAAkB,GAlChCrB,EAAUE,UAAUoB,OAAO,aCF3B,MAAMC,OFVeP,WACrB,MAAMQ,OAdUR,WAChB,IACE,MAAMS,QAAiBC,MAElB,mFAAKT,KAEV,aAAaQ,EAASE,MACxB,CAAE,MAAOC,GAEP,OADAC,QAAQD,MAAMA,GACP,CAAEA,MAAO,CAAEE,QAAS,4BAC7B,GAI2BC,CAAUd,GAErC,OAAIO,EAAaI,MAAcJ,EAExB,CACLQ,aAAcR,EAAaP,SAASgB,KACpCC,cAAeV,EAAaW,QAAQC,UAAUC,KAC9CC,cAAed,EAAaW,QAAQC,UAAUG,KAC9C7B,MAAOc,EAAaW,QAAQK,OAC5B7B,MAAOa,EAAaW,QAAQM,OAC7B,EEDyBC,CAAezB,GAEzC,GDIAjB,EAAUE,UAAUC,IAAI,aCJpBoB,EAAYK,MAGd,OAFAvB,IDeiBuB,ECdLL,EAAYK,MDe1B/B,EAASY,YAAe,GAAEmB,EAAME,eAChCjC,EAASK,UAAUoB,OAAO,aAFPM,MASMe,EAYF3B,WACvB,MAAM4B,ODlCW5B,WACjB,IACE,MAAMS,QAAiBC,MAElB,sFAAKmB,KAKV,aAFsBpB,EAASE,QAEhBgB,KAAKG,OAAOC,SAASC,GACtC,CAAE,MAAOpB,GAEP,OADAC,QAAQoB,IAAIrB,GACLA,CACT,GCqBsBsB,CAAWL,GACjC9C,EAAQqB,MAAMC,gBAAmB,OAAMuB,IAAU,EClCjDO,CAAiB5B,EAAYW,eAC7BtB,IDoBAX,EADyB0C,EClBPpB,EDoBlB9B,EAAYgB,YAAckC,EAAKX,aAC/BtC,EAAiBe,YAAckC,EAAKT,cACpCvC,EAAgByD,IAAO,SAAQT,EAAKL,gBACpChC,IAnCAjB,EAAYa,UAAUoB,OAAO,aAC7B9B,EAAaU,UAAUoB,OAAO,YCYjB,EAGfT,EAAUwC,iBAAiB,QAAStC,GACpCD,EAAYuC,iBAAiB,WAAYC,IACzB,UAAVA,EAAEC,KACNxC,GAAc,IAGhBzB,SAASkE,iBAAiB,eAAeC,SAASC,IAChDA,EAAML,iBAAiB,SAAU/C,EAAe,G","sources":["webpack://weather-app/./src/scripts/fetchData.js","webpack://weather-app/./src/scripts/domController.js","webpack://weather-app/./src/scripts/eventHandler.js"],"sourcesContent":["const API_KEY = 'c9bab1f090994008ae262726241705';\n\nconst fetchData = async (location) => {\n  try {\n    const response = await fetch(\n      `https://api.weatherapi.com/v1/current.json?key=${API_KEY}` +\n        `&q=${location}`,\n    );\n    return await response.json();\n  } catch (error) {\n    console.error(error);\n    return { error: { message: 'Unable to retrieve data.' } };\n  }\n};\n\nconst getWeatherData = async (location) => {\n  const originalData = await fetchData(location);\n\n  if (originalData.error) return originalData;\n\n  return {\n    locationName: originalData.location.name,\n    conditionText: originalData.current.condition.text,\n    conditionIcon: originalData.current.condition.icon,\n    tempC: originalData.current.temp_c,\n    tempF: originalData.current.temp_f,\n  };\n};\n\nconst GIF_API_KEY = 'JyGBtwCcEOqTVjjPAsWLFEbT9xDKSeni';\n\nconst getGifLink = async (query) => {\n  try {\n    const response = await fetch(\n      `https://api.giphy.com/v1/gifs/translate?api_key=${GIF_API_KEY}` +\n        `&s=${query}`,\n    );\n\n    const gifData = await response.json();\n\n    return gifData.data.images.original.url;\n  } catch (error) {\n    console.log(error);\n    return error;\n  }\n};\n\nexport { getWeatherData, getGifLink };\n","import { getGifLink } from './fetchData';\n\nconst weatherCard = document.querySelector('.js-weather-card');\nconst degreeRadios = document.querySelector('.js-degree-radios');\nconst locationDiv = document.querySelector('.js-location');\nconst conditionTextDiv = document.querySelector('.js-weather-condition');\nconst conditionImgDiv = document.querySelector('.js-weather-img');\nconst temperatureDiv = document.querySelector('.js-temperature');\nconst errorDiv = document.createElement('div');\nconst mainDiv = document.querySelector('.main');\nconst loaderDiv = document.querySelector('.js-loader');\nlet currentWeatherData = null;\nerrorDiv.classList.add('error');\nerrorDiv.classList.add('is-hidden');\ndocument.querySelector('.main').appendChild(errorDiv);\n\nconst hideContent = () => {\n  weatherCard.classList.add('is-hidden');\n  degreeRadios.classList.add('is-hidden');\n};\n\nconst showContent = () => {\n  weatherCard.classList.remove('is-hidden');\n  degreeRadios.classList.remove('is-hidden');\n};\n\nconst showLoader = () => {\n  loaderDiv.classList.remove('is-hidden');\n};\n\nconst hideLoader = () => {\n  loaderDiv.classList.add('is-hidden');\n};\n\nconst setTemperature = () => {\n  const degreeType = document.querySelector('.js-degree-radios :checked').id;\n  if (degreeType === 'celsius') {\n    temperatureDiv.textContent = `${currentWeatherData.tempC}°C`;\n  } else {\n    temperatureDiv.textContent = `${currentWeatherData.tempF}°F`;\n  }\n};\n\nconst renderError = (error) => {\n  errorDiv.textContent = `${error.message}`;\n  errorDiv.classList.remove('is-hidden');\n};\n\nconst hideError = () => {\n  errorDiv.classList.add('is-hidden');\n};\n\nconst renderWeatherData = (data) => {\n  currentWeatherData = data;\n  locationDiv.textContent = data.locationName;\n  conditionTextDiv.textContent = data.conditionText;\n  conditionImgDiv.src = `https:${data.conditionIcon}`;\n  setTemperature();\n};\n\nconst hideBackgroundGIF = () => {\n  mainDiv.style.backgroundImage = '';\n};\n\nconst setBackgroundGIF = async (query) => {\n  const gifLink = await getGifLink(query);\n  mainDiv.style.backgroundImage = `url(${gifLink})`;\n};\n\nexport {\n  renderWeatherData,\n  showContent,\n  hideContent,\n  renderError,\n  hideError,\n  setTemperature,\n  showLoader,\n  hideLoader,\n  hideBackgroundGIF,\n  setBackgroundGIF,\n};\n","import { getWeatherData } from './fetchData';\nimport {\n  renderWeatherData,\n  showContent,\n  hideContent,\n  renderError,\n  hideError,\n  setTemperature,\n  showLoader,\n  hideLoader,\n  setBackgroundGIF,\n  hideBackgroundGIF,\n} from './domController';\n\nconst searchBtn = document.querySelector('.js-search-btn');\nconst searchInput = document.querySelector('.js-search-input');\n\nconst processInput = async () => {\n  const location = searchInput.value;\n  if (location.trim() === '') return;\n\n  hideContent();\n  hideError();\n  hideBackgroundGIF();\n  showLoader();\n  const weatherData = await getWeatherData(location);\n  hideLoader();\n  if (weatherData.error) {\n    hideContent();\n    renderError(weatherData.error);\n    return;\n  }\n  setBackgroundGIF(weatherData.conditionText);\n  hideError();\n  renderWeatherData(weatherData);\n  showContent();\n};\n\nsearchBtn.addEventListener('click', processInput);\nsearchInput.addEventListener('keydown', (e) => {\n  if (e.key !== 'Enter') return;\n  processInput();\n});\n\ndocument.querySelectorAll('.js-rad-inp').forEach((input) => {\n  input.addEventListener('change', setTemperature);\n});\n"],"names":["weatherCard","document","querySelector","degreeRadios","locationDiv","conditionTextDiv","conditionImgDiv","temperatureDiv","errorDiv","createElement","mainDiv","loaderDiv","currentWeatherData","classList","add","appendChild","hideContent","setTemperature","degreeType","id","textContent","tempC","tempF","hideError","searchBtn","searchInput","processInput","async","location","value","trim","style","backgroundImage","remove","weatherData","originalData","response","fetch","json","error","console","message","fetchData","locationName","name","conditionText","current","condition","text","conditionIcon","icon","temp_c","temp_f","getWeatherData","data","gifLink","query","images","original","url","log","getGifLink","setBackgroundGIF","src","addEventListener","e","key","querySelectorAll","forEach","input"],"sourceRoot":""}